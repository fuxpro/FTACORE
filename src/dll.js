// Generated by CoffeeScript 1.9.2
(function() {
  var NtCLCardReader, NtCLCardReaderSync, NtCardReader, NtCardReaderSync, NtIdentityReader, NtIdentityReaderSync, NtMagneticStripeReader, NtMagneticStripeReaderSync, fs, getNtCLCardReaderStatus, getNtCLCardReaderStatusSync, getNtCardReaderStatus, getNtCardReaderStatusSync, getNtIdentityReaderStatus, getNtIdentityReaderStatusSync, getNtMagneticStripeReaderStatus, getNtMagneticStripeReaderStatusSync, getPrinterStatus, getPrinterStatusSync, getReaderStatus, getReaderStatusSync, operateCard, operateCardSync, operatePrinter, operatePrinterSync, printData, printDataSync, printDimensionCodeData, printDimensionCodeDataSync, readCard, readCardSync;

  fs = require('fs');

  readCard = function(cardName, callback) {
    return fs.readFile(__dirname + "\\" + cardName, function(error, data) {
      if (error) {
        callback(error, {});
      }
      return callback({
        "errorCode": "IDC88888",
        "errorDesc": "连接[NtCardReader]成功"
      }, JSON.parse(data));
    });
  };

  NtCardReader = function(track1, track2, track3, cardNo, callback) {
    return readCard("card.json", callback);
  };

  NtCLCardReader = function(track1, track2, track3, cardNo, callback) {
    return readCard("cl_card.json", callback);
  };

  NtMagneticStripeReader = function(track1, track2, track3, cardNo, callback) {
    return readCard("magnetic_stripe_card.json", callback);
  };

  NtIdentityReader = function(callback) {
    return readCard("identity_card.json", callback);
  };

  readCardSync = function(serviceName) {
    var content;
    content = fs.readFileSync(__dirname + "\\" + serviceName);
    if (!content) {
      return {
        error: {
          "errorCode": "IDC00000",
          "errorDesc": "连接[NtCLCardReader]失败"
        },
        data: {}
      };
    }
    return {
      error: {
        "errorCode": "IDC88888",
        "errorDesc": "连接[NtCardReader]成功"
      },
      data: JSON.parse(content)
    };
  };

  NtCardReaderSync = function(track1, track2, track3, cardNo) {
    return readCardSync("card.json");
  };

  NtCLCardReaderSync = function(track1, track2, track3, cardNo, callback) {
    return readCardSync("cl_card.json");
  };

  NtMagneticStripeReaderSync = function(track1, track2, track3, cardNo, callback) {
    return readCardSync("magnetic_stripe_card.json");
  };

  NtIdentityReaderSync = function() {
    return readCardSync("identity_card.json");
  };

  getReaderStatus = function(readerName, callback) {
    return fs.readFile(__dirname + "\\card_reader.json", function(error, data) {
      return callback(error, JSON.parse(data));
    });
  };

  getNtCardReaderStatus = function(callback) {
    return getReaderStatus("card_reader.json", callback);
  };

  getNtCLCardReaderStatus = function(callback) {
    return getReaderStatus("cl_card_reader.json", callback);
  };

  getNtMagneticStripeReaderStatus = function(callback) {
    return getReaderStatus("magnetic_stripe_card_reader.json", callback);
  };

  getNtIdentityReaderStatus = function(callback) {
    return getReaderStatus("identity_card_reader.json", callback);
  };

  getReaderStatusSync = function(readerName) {
    var content;
    content = fs.readFileSync(__dirname + "\\" + readerName);
    if (!content) {
      return {
        error: {
          "errorCode": "IDC88888",
          "errorDesc": "连接[NtCLCardReader]失败"
        },
        data: {
          "status": "99"
        }
      };
    }
    return {
      error: {
        "errorCode": "IDC88888",
        "errorDesc": "连接[NtCardReader]成功"
      },
      data: JSON.parse(content)
    };
  };

  getNtCardReaderStatusSync = function() {
    return getReaderStatusSync("card_reader.json");
  };

  getNtCLCardReaderStatusSync = function() {
    return getReaderStatusSync("cl_card_reader.json");
  };

  getNtMagneticStripeReaderStatusSync = function() {
    return getReaderStatusSync("magnetic_stripe_card_reader.json");
  };

  getNtIdentityReaderStatusSync = function() {
    return getReaderStatusSync("identity_card_reader.json");
  };

  operateCard = function(serviceName, action, callback) {
    return callback({
      "errorCode": "IDC88888",
      "errorDesc": "连接[NtCardReader]设备错误"
    });
  };

  operateCardSync = function(serviceName, action) {
    return {
      "errorCode": "IDC88888",
      "errorDesc": "连接[NtCardReader]设备错误"
    };
  };

  printData = function(serviceName, data, callback) {
    return callback({
      "errorCode": "PTR88888",
      "errorDesc": "连接[NtDocumentPrinter]设备错误"
    });
  };

  printDataSync = function(serviceName, data) {
    return {
      "errorCode": "PTR88888",
      "errorDesc": "连接[NtDocumentPrinter]设备错误"
    };
  };

  printDimensionCodeData = function(serviceName, codeType, codeImgPath, callback) {
    return callback({
      "errorCode": "PTR88888",
      "errorDesc": "连接[NtDocumentPrinter]设备错误"
    });
  };

  printDimensionCodeDataSync = function(serviceName, codeType, codeImgPath) {
    return {
      "errorCode": "PTR88888",
      "errorDesc": "连接[NtDocumentPrinter]设备错误"
    };
  };

  getPrinterStatus = function(serviceName, callback) {
    return callback({
      "errorCode": "PTR88888",
      "errorDesc": "连接[NtDocumentPrinter]设备错误"
    }, {
      "status": "00"
    });
  };

  getPrinterStatusSync = function(serviceName) {
    return {
      "error": {
        "errorCode": "PTR88888",
        "errorDesc": "连接[NtDocumentPrinter]设备错误"
      },
      "status": {
        "status": "00"
      }
    };
  };

  operatePrinter = function(serviceName, action, callback) {
    return callback({
      "errorCode": "PTR88888",
      "errorDesc": "连接[NtDocumentPrinter]设备错误"
    });
  };

  operatePrinterSync = function(serviceName, action) {
    return {
      "errorCode": "PTR88888",
      "errorDesc": "连接[NtDocumentPrinter]设备错误"
    };
  };

  module.exports = {
    NtCardReader: NtCardReader,
    NtCLCardReader: NtCLCardReader,
    NtMagneticStripeReader: NtMagneticStripeReader,
    NtIdentityReader: NtIdentityReader,
    NtCardReaderSync: NtCardReaderSync,
    NtCLCardReaderSync: NtCLCardReaderSync,
    NtMagneticStripeReaderSync: NtMagneticStripeReaderSync,
    NtIdentityReaderSync: NtIdentityReaderSync,
    getNtCardReaderStatus: getNtCardReaderStatus,
    getNtCLCardReaderStatus: getNtCLCardReaderStatus,
    getNtMagneticStripeReaderStatus: getNtMagneticStripeReaderStatus,
    getNtIdentityReaderStatus: getNtIdentityReaderStatus,
    getNtCardReaderStatusSync: getNtCardReaderStatusSync,
    getNtCLCardReaderStatusSync: getNtCLCardReaderStatusSync,
    getNtMagneticStripeReaderStatusSync: getNtMagneticStripeReaderStatusSync,
    getNtIdentityReaderStatusSync: getNtIdentityReaderStatusSync,
    operateCard: operateCard,
    operateCardSync: operateCardSync,
    printData: printData,
    printDataSync: printDataSync,
    printDimensionCodeData: printDimensionCodeData,
    printDimensionCodeDataSync: printDimensionCodeDataSync,
    getPrinterStatus: getPrinterStatus,
    getPrinterStatusSync: getPrinterStatusSync,
    operatePrinter: operatePrinter,
    operatePrinterSync: operatePrinterSync
  };

}).call(this);
